{"version":3,"sources":["i18n.ts"],"names":["AppleLocaleSettings","NativeModules","SettingsManager","settings","AndroidLocaleSettings","I18nManager","deviceLocale","Platform","OS","AppleLocale","AppleLanguages","localeIdentifier","i18n","use","initReactI18next","init","resources","en","englishTranslations","fr","frenchTranslations","fr_US","fr_CA","lng","fallbackLng","interpolation","escapeValue","getDateLocale","language","frCA","enUS","getChartsLanguage","loading","months","weekdays","shortMonths","rangeSelectorFrom","rangeSelectorTo","rangeSelectorZoom","downloadPNG","downloadJPEG","downloadPDF","downloadSVG","resetZoom","resetZoomTitle","thousandsSep","decimalPoint","undefined","getChartsAxisDateTimeLabelFormats","day","hour","millisecond","second","minute","month","year","week","getChartsTooltipDateTimeLabelFormats","format","dateLocale"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport { Platform, NativeModules } from 'react-native';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport englishTranslations from './english';\nimport frenchTranslations from './french';\nimport { frCA, enUS } from 'date-fns/locale';\nimport * as Highcharts from 'highcharts';\n\n// for getting the device's language locale\n// 'en' is default deviceLocale\nconst AppleLocaleSettings = NativeModules.SettingsManager?.settings;\nconst AndroidLocaleSettings = NativeModules.I18nManager;\nlet deviceLocale = 'en';\nif (AppleLocaleSettings && Platform.OS === 'ios') {\n    deviceLocale = AppleLocaleSettings.AppleLocale /* < iOS 13 */ || AppleLocaleSettings.AppleLanguages[0]; /* iOS 13 */\n} else if (AndroidLocaleSettings && Platform.OS === 'android') {\n    deviceLocale = AndroidLocaleSettings.localeIdentifier;\n}\n\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources: {\n            en: englishTranslations,\n            fr: frenchTranslations,\n            fr_US: frenchTranslations,\n            fr_CA: frenchTranslations,\n        },\n        lng: deviceLocale,\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false,\n        },\n    });\n\nconst getDateLocale = (): Locale => {\n    switch (i18n.language) {\n        case 'fr':\n            return frCA;\n        default:\n            return enUS;\n    }\n};\n\nexport const getChartsLanguage = (): Highcharts.LangOptions | undefined => {\n    switch (i18n.language) {\n        case 'fr':\n            return {\n                loading: 'Chargement...',\n                months: [\n                    'janvier',\n                    'février',\n                    'mars',\n                    'avril',\n                    'mai',\n                    'juin',\n                    'juillet',\n                    'août',\n                    'septembre',\n                    'octobre',\n                    'novembre',\n                    'décembre',\n                ],\n                weekdays: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n                shortMonths: ['jan', 'fév', 'mar', 'avr', 'mai', 'juin', 'juil', 'aoû', 'sep', 'oct', 'nov', 'déc'],\n                rangeSelectorFrom: 'Du',\n                rangeSelectorTo: 'au',\n                rangeSelectorZoom: 'Période',\n                downloadPNG: 'Télécharger en PNG',\n                downloadJPEG: 'Télécharger en JPEG',\n                downloadPDF: 'Télécharger en PDF',\n                downloadSVG: 'Télécharger en SVG',\n                resetZoom: 'Réinitialiser le zoom',\n                resetZoomTitle: 'Réinitialiser le zoom',\n                thousandsSep: ' ',\n                decimalPoint: ',',\n            };\n        default:\n            return undefined;\n    }\n};\n\nexport const getChartsAxisDateTimeLabelFormats = (): Highcharts.AxisDateTimeLabelFormatsOptions | undefined => {\n    switch (i18n.language) {\n        case 'fr': // default to built-in locale until a native French speaker can specify\n            return undefined;\n\n        case 'en': // assume US English\n            return {\n                day: '%m/%d',\n                hour: '%l:%M %P',\n                millisecond: '%l:%M:%S %P', // '%l:%M:%S.%L %P'\n                second: '%l:%M:%S %P',\n                minute: '%l:%M',\n                month: '%b, %Y',\n                year: '%Y',\n                week: '%b %e',\n            };\n\n        default:\n            return undefined;\n    }\n};\n\ntype FormatStrings = {\n    day: string;\n    hour: string;\n    millisecond: string;\n    second: string;\n    minute: string;\n    month: string;\n    year: string;\n    week: string;\n};\nexport const getChartsTooltipDateTimeLabelFormats = (): FormatStrings | undefined => {\n    switch (i18n.language) {\n        case 'fr': // default to built-in locale until a native French speaker can specify\n            return undefined;\n\n        case 'en': {\n            // assume US English\n            const format = '%m/%d/%Y %l:%M:%S %P';\n\n            return {\n                day: format,\n                hour: format,\n                millisecond: format,\n                second: format,\n                minute: format,\n                month: format,\n                year: format,\n                week: format,\n            };\n        }\n\n        default:\n            return undefined;\n    }\n};\n\nexport const dateLocale = getDateLocale();\n\nexport default i18n;\n"]}