{"version":3,"sources":["reducer.ts"],"names":["registrationReducer","prevState","action","type","inviteRegistration","registrationTransit","initialTransitState","email","organizationName","payload","transitId","errorMessage","eulaTransit","validationTransit","codeRequestTransit"],"mappings":"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","sourcesContent":["/**\n * @packageDocumentation\n * @module RegistrationUIContext\n */\n\nimport { RegistrationUIState } from './state';\nimport { initialTransitState, transitStart, transitSuccess, transitFailed } from '../TransitState';\nimport { RegistrationActions } from './dispatchActions';\n\n/**\n * Default reducer for global [[RegistrationUIState]].\n *\n * @param prevState Previous [[RegistrationUIState]] to update.\n * @param action State change action, which should be of type [[RegistrationActions]].\n */\nexport const registrationReducer = (\n    prevState: RegistrationUIState,\n    action: RegistrationActions\n): RegistrationUIState => {\n    switch (action.type) {\n        case 'Registration/RegisterUser/Reset':\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    registrationTransit: initialTransitState,\n                    email: null,\n                    organizationName: null,\n                },\n            };\n\n        case 'Registration/RegisterUser/Started':\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    registrationTransit: transitStart(action.payload.transitId),\n                },\n            };\n        case 'Registration/RegisterUser/Succeeded':\n            if (prevState.inviteRegistration.registrationTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    registrationTransit: transitSuccess(action.payload.transitId),\n                    email: action.payload.email,\n                    organizationName: action.payload.organizationName,\n                },\n            };\n        case 'Registration/RegisterUser/Failed':\n            if (prevState.inviteRegistration.registrationTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    registrationTransit: transitFailed(action.payload.errorMessage, action.payload.transitId),\n                    email: null,\n                    organizationName: null,\n                },\n            };\n\n        case 'Registration/LoadEula/Reset':\n            return {\n                ...prevState,\n                eulaTransit: initialTransitState,\n            };\n        case 'Registration/LoadEula/Started':\n            return {\n                ...prevState,\n                eulaTransit: transitStart(action.payload.transitId),\n            };\n        case 'Registration/LoadEula/Succeeded':\n            if (prevState.eulaTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n\n            return {\n                ...prevState,\n                eulaTransit: transitSuccess(action.payload.transitId),\n            };\n        case 'Registration/LoadEula/Failed':\n            if (prevState.eulaTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n\n            return {\n                ...prevState,\n                eulaTransit: transitFailed(action.payload.errorMessage, action.payload.transitId),\n            };\n\n        case 'Registration/ValidateUser/Reset':\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    validationTransit: initialTransitState,\n                },\n            };\n\n        case 'Registration/ValidateUser/Started':\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    validationTransit: transitStart(action.payload.transitId),\n                },\n            };\n        case 'Registration/ValidateUser/Succeeded':\n            if (prevState.inviteRegistration.validationTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    validationTransit: transitSuccess(action.payload.transitId),\n                },\n            };\n        case 'Registration/ValidateUser/Failed':\n            if (prevState.inviteRegistration.validationTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    validationTransit: transitFailed(action.payload.errorMessage, action.payload.transitId),\n                },\n            };\n        case 'Registration/RequestCode/Reset':\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    codeRequestTransit: initialTransitState,\n                },\n            };\n        case 'Registration/RequestCode/Started':\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    codeRequestTransit: transitStart(action.payload.transitId),\n                },\n            };\n        case 'Registration/RequestCode/Succeeded':\n            if (prevState.inviteRegistration.codeRequestTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    codeRequestTransit: transitSuccess(action.payload.transitId),\n                },\n            };\n        case 'Registration/RequestCode/Failed':\n            if (prevState.inviteRegistration.codeRequestTransit.transitId !== action.payload.transitId) {\n                return prevState;\n            }\n            return {\n                ...prevState,\n                inviteRegistration: {\n                    ...prevState.inviteRegistration,\n                    codeRequestTransit: transitFailed(action.payload.errorMessage, action.payload.transitId),\n                },\n            };\n        default:\n            return prevState;\n    }\n};\n"]}