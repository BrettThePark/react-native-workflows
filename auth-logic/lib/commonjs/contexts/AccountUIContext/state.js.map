{"version":3,"sources":["state.ts"],"names":["initialAccountUIState","userToken","email","login","initialTransitState","forgotPassword","setPassword","setPasswordTransit","verifyResetCodeTransit"],"mappings":"4RAKA,6C,yyBAmDO,GAAMA,CAAAA,qBAAqC,CAAG,CACjDC,SAAS,CAAE,IADsC,CAEjDC,KAAK,CAAE,IAF0C,CAGjDC,KAAK,gCACEC,iCADF,MAEDF,KAAK,CAAE,IAFN,EAH4C,CAOjDG,cAAc,gCACPD,iCADO,MAEVF,KAAK,CAAE,IAFG,EAPmC,CAWjDI,WAAW,CAAE,CACTC,kBAAkB,CAAEH,iCADX,CAETI,sBAAsB,CAAEJ,iCAFf,CAXoC,CAA9C,C","sourcesContent":["/**\n * @packageDocumentation\n * @module AccountUIContext\n */\n\nimport { TransitState, initialTransitState } from '../TransitState';\n\n/**\n * Network state and email for a user attempting to authenticate into the app.\n *\n * @param email The email with which a user is attempting to authenticate into the app.\n */\ntype LoginState = TransitState & {\n    email: string | null;\n};\n\n/**\n * Network state and email for a user requesting forgot password.\n *\n * @param email The email belonging to the account for which a user is doing a forgot password request.\n */\ntype ForgotPasswordState = TransitState & {\n    email: string | null;\n};\n\n/**\n * Network state for a user attempting to set a new password using a verify reset code after requestion forgot password.\n *\n * @param setPasswordTransit Network state for setting a new password for a user who has made a forgot password request.\n * @param verifyResetCodeTransit Network state for verifying the reset password code for a user who has made a forgot password request.\n */\ntype SetPasswordState = {\n    setPasswordTransit: TransitState;\n    verifyResetCodeTransit: TransitState;\n};\n\n/**\n * Global state for authentication-related activities and forgotten password retrieval.\n *\n * @param userToken The current user's authentication token.\n * @param email The email of the current user.\n * @param login State of authentication for the current user, including transit state of the call.\n * @param forgotPassword State of a forgot password request (which then sends an email to the user's account).\n * @param setPassword State of the setPassword request, after a user begins resetting a forgotten password using the deep link token from their email.\n */\nexport type AccountUIState = {\n    userToken: string | null;\n    email: string | null;\n    login: LoginState;\n    forgotPassword: ForgotPasswordState;\n    setPassword: SetPasswordState;\n};\n\n/**\n * Default initial state for [[AccountUIState]] upon app start.\n */\nexport const initialAccountUIState: AccountUIState = {\n    userToken: null,\n    email: null,\n    login: {\n        ...initialTransitState,\n        email: null,\n    },\n    forgotPassword: {\n        ...initialTransitState,\n        email: null,\n    },\n    setPassword: {\n        setPasswordTransit: initialTransitState,\n        verifyResetCodeTransit: initialTransitState,\n    },\n};\n"]}