{"version":3,"sources":["SecurityContextProvider.tsx"],"names":["StateContext","React","createContext","DispatchContext","useSecurityState","context","useContext","Error","useSecurityActions","SecurityContextProvider","props","initialContextState","userId","undefined","email","rememberMeDetails","rememberMe","isAuthenticatedUser","isLoading","isSignOut","isShowingChangePassword","useReducer","reducer","state","dispatch","onUserNotAuthenticated","useCallback","clearRememberMe","overrideRememberMeEmail","type","payload","showChangePassword","hideChangePassword","onUserAuthenticated","onUserAuthenticatedArgs","memoizedAuthHelper","useMemo","authHelper","children"],"mappings":"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","sourcesContent":["/**\n * @packageDocumentation\n * @module SecurityContextProvider\n */\n\nimport React from 'react';\nimport { SecurityContextState, SecurityContextActions } from './types';\nimport { reducer } from './reducer';\n\n/** @ignore */\nconst StateContext = React.createContext<SecurityContextState | null>(null);\n/** @ignore */\nconst DispatchContext = React.createContext<SecurityContextActions | null>(null);\n\n/**\n * A hook to get the security state (authenticated / not authenticated).\n *\n * NOTE: Must be used inside of a [[SecurityContextProvider]].\n * @category Hooks\n */\nconst useSecurityState = (): SecurityContextState => {\n    const context = React.useContext(StateContext);\n    if (context === null) {\n        throw new Error('useSecurityState must be used within an SecurityContextProvider');\n    }\n    return context;\n};\n\n/**\n * A hook to get the security actions (on authenticated / on not authenticated).\n *\n * NOTE: Must be used inside of a [[SecurityContextProvider]].\n * @category Hooks\n */\nconst useSecurityActions = (): SecurityContextActions => {\n    const context = React.useContext(DispatchContext);\n    if (context === null) {\n        throw new Error('useSecurityActions must be used within an SecurityContextProvider');\n    }\n    return context;\n};\n\n/**\n *  Provides a wrapper for the security state and security actions.\n *\n *  @public\n *  @category Component\n */\nconst SecurityContextProvider: React.FC = (props) => {\n    const initialContextState: SecurityContextState = {\n        userId: undefined,\n        email: undefined,\n        rememberMeDetails: {\n            email: undefined,\n            rememberMe: undefined,\n        },\n        isAuthenticatedUser: false,\n        isLoading: true,\n        isSignOut: false,\n        isShowingChangePassword: false,\n    };\n\n    const [state, dispatch] = React.useReducer(reducer, initialContextState);\n\n    // Function will not change for children (dispatch does not need to be a dependency)\n    const onUserNotAuthenticated = React.useCallback((clearRememberMe = false, overrideRememberMeEmail?: string) => {\n        dispatch({\n            type: 'userNotAuthenticated',\n            payload: { clearRememberMe: clearRememberMe, overrideRememberMeEmail: overrideRememberMeEmail },\n        });\n    }, []);\n\n    const showChangePassword = React.useCallback((): void => {\n        dispatch({\n            type: 'showChangePassword',\n        });\n    }, []);\n\n    const hideChangePassword = React.useCallback((): void => {\n        dispatch({\n            type: 'hideChangePassword',\n        });\n    }, []);\n\n    // Function will not change for children (dispatch does not need to be a dependency)\n    const onUserAuthenticated = React.useCallback(\n        (onUserAuthenticatedArgs: { email: string; userId: string; rememberMe: boolean }) => {\n            dispatch({\n                type: 'userAuthenticated',\n                payload: onUserAuthenticatedArgs,\n            });\n        },\n        []\n    );\n\n    // Context value will not change unless a sub function is changed\n    const memoizedAuthHelper = React.useMemo(() => {\n        const authHelper: SecurityContextActions = {\n            onUserAuthenticated,\n            onUserNotAuthenticated,\n            showChangePassword,\n            hideChangePassword,\n        };\n        return authHelper;\n    }, [onUserAuthenticated, onUserNotAuthenticated, showChangePassword, hideChangePassword]);\n\n    return (\n        <StateContext.Provider value={state}>\n            <DispatchContext.Provider value={memoizedAuthHelper}>{props.children}</DispatchContext.Provider>\n        </StateContext.Provider>\n    );\n};\n\nexport { SecurityContextProvider, DispatchContext as SecurityActionContext, useSecurityState, useSecurityActions };\n"]}