{"version":3,"sources":["index.ts"],"names":["EMAIL_REGEX","SPECIAL_CHAR_REGEX","LENGTH_REGEX","NUMBERS_REGEX","UPPER_CASE_REGEX","LOWER_CASE_REGEX"],"mappings":"4MAAO,GAAMA,CAAAA,WAAW,CAAG,2CAApB,C,gCAQA,GAAMC,CAAAA,kBAAkB,CAAG,oCAA3B,C,8CACA,GAAMC,CAAAA,YAAY,CAAG,WAArB,C,kCACA,GAAMC,CAAAA,aAAa,CAAG,QAAtB,C,oCACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAzB,C,0CACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAzB,C","sourcesContent":["export const EMAIL_REGEX = /^[A-Z0-9._%+'-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n\n/////////////////////////////////////////////////////////////////////////////////////\n// NOTE: The following Regular expressions are used for the\n//       password validation logic. It is critical that they not\n//       be \"global\" regexes  (no 'g' after the last slash). Global\n//       regexes maintain state when their .test() function is called.\n//       We don't want that.\nexport const SPECIAL_CHAR_REGEX = /[!\"#$%&'()*+,-./:;<=>?@[\\]^`{|}~]+/;\nexport const LENGTH_REGEX = /^.{8,16}$/;\nexport const NUMBERS_REGEX = /[0-9]+/;\nexport const UPPER_CASE_REGEX = /[A-Z]+/;\nexport const LOWER_CASE_REGEX = /[a-z]+/;\n/////////////////////////////////////////////////////////////////////////////////////\n"]}